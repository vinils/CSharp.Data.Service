// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSharp.Data.Service.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191226224010_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Models.Data", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CollectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "CollectionDate");

                    b.ToTable("Data");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Data");
                });

            modelBuilder.Entity("Data.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeasureUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("Data.Models.LimitDecimal", b =>
                {
                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<decimal>("Max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Min")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "Priority", "Max");

                    b.HasIndex("GroupId", "Priority", "Min");

                    b.ToTable("LimitDecimal");
                });

            modelBuilder.Entity("Data.Models.LimitDecimalDenormalized", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CollectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Color")
                        .HasColumnType("int");

                    b.Property<decimal?>("Max")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaxType")
                        .HasColumnType("int");

                    b.Property<decimal?>("Min")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MinType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "CollectionDate");

                    b.ToTable("LimitDecimalDenormalized");
                });

            modelBuilder.Entity("Data.Models.LimitStringDenormalized", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CollectionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Color")
                        .HasColumnType("int");

                    b.Property<string>("Expected")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "CollectionDate");

                    b.ToTable("LimitStringDenormalized");
                });

            modelBuilder.Entity("Data.Models.DataDecimal", b =>
                {
                    b.HasBaseType("Data.Models.Data");

                    b.Property<decimal>("DecimalValue")
                        .HasColumnType("decimal(18,10)");

                    b.HasDiscriminator().HasValue("DataDecimal");
                });

            modelBuilder.Entity("Data.Models.DataString", b =>
                {
                    b.HasBaseType("Data.Models.Data");

                    b.Property<string>("StringValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("DataString");
                });

            modelBuilder.Entity("Data.Models.Data", b =>
                {
                    b.HasOne("Data.Models.Group", "Group")
                        .WithMany("Datas")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.Group", b =>
                {
                    b.HasOne("Data.Models.Group", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Data.Models.LimitDecimal", b =>
                {
                    b.HasOne("Data.Models.Group", "Group")
                        .WithMany("LimitDecimals")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.LimitDecimal", "Last")
                        .WithMany()
                        .HasForeignKey("GroupId", "Priority", "Min");
                });

            modelBuilder.Entity("Data.Models.LimitDecimalDenormalized", b =>
                {
                    b.HasOne("Data.Models.DataDecimal", "Data")
                        .WithOne("LimitDenormalized")
                        .HasForeignKey("Data.Models.LimitDecimalDenormalized", "GroupId", "CollectionDate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.LimitStringDenormalized", b =>
                {
                    b.HasOne("Data.Models.DataString", "Data")
                        .WithOne("LimitDenormalized")
                        .HasForeignKey("Data.Models.LimitStringDenormalized", "GroupId", "CollectionDate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
